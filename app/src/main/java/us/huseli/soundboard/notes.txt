2021-05-11 04:10:32.784 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 363e523, state=READY, timeoutUs=845280579260252
2021-05-11 04:10:32.784 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 363e523, state=READY, timeoutUs=null
2021-05-11 04:10:32.789 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 363e523, state=READY, timeoutUs=null
2021-05-11 04:10:32.814 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 363e523, state=INIT_PLAY, timeoutUs=null

2021-05-11 04:10:33.309 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 363e523, state=PLAYING, timeoutUs=845281105616444
2021-05-11 04:10:33.311 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 363e523 temporary, timeoutUs=845281105616444
2021-05-11 04:10:33.338 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 1ff2262, state=CREATED
2021-05-11 04:10:33.342 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 1ff2262, state=READY
2021-05-11 04:10:33.342 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 1ff2262, state=READY, timeoutUs=845281105616444
2021-05-11 04:10:33.343 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 1ff2262, state=READY, timeoutUs=845281105616444
2021-05-11 04:10:33.353 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 1ff2262, state=INIT_PLAY, timeoutUs=845281105616444
2021-05-11 04:10:33.354 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 1ff2262, timeoutUs=845281105616444

2021-05-11 04:10:33.539 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 1ff2262, state=PLAYING, timeoutUs=845281336217906
2021-05-11 04:10:33.539 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 1ff2262 temporary, timeoutUs=845281336217906
2021-05-11 04:10:33.557 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile fe7aff3, state=CREATED
2021-05-11 04:10:33.559 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile fe7aff3, state=READY
2021-05-11 04:10:33.560 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile fe7aff3, state=READY, timeoutUs=845281336217906
2021-05-11 04:10:33.560 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile fe7aff3, state=READY, timeoutUs=845281336217906
2021-05-11 04:10:33.568 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile fe7aff3, state=INIT_PLAY, timeoutUs=845281336217906
2021-05-11 04:10:33.568 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile fe7aff3, timeoutUs=845281336217906

2021-05-11 04:10:33.758 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile fe7aff3, state=PLAYING, timeoutUs=845281554407713
2021-05-11 04:10:33.759 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile fe7aff3 temporary, timeoutUs=845281554407713
2021-05-11 04:10:33.783 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 63424b0, state=CREATED
2021-05-11 04:10:33.786 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 63424b0, state=READY
2021-05-11 04:10:33.786 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 63424b0, state=READY, timeoutUs=845281554407713
2021-05-11 04:10:33.787 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 63424b0, state=READY, timeoutUs=845281554407713
2021-05-11 04:10:33.795 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 63424b0, state=INIT_PLAY, timeoutUs=845281554407713
2021-05-11 04:10:33.795 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 63424b0, timeoutUs=845281554407713

2021-05-11 04:10:33.966 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 63424b0, state=PLAYING, timeoutUs=845281762526405
2021-05-11 04:10:33.968 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 63424b0 temporary, timeoutUs=845281762526405
2021-05-11 04:10:33.987 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 7816f29, state=CREATED
2021-05-11 04:10:33.991 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 7816f29, state=READY
2021-05-11 04:10:33.991 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 7816f29, state=READY, timeoutUs=845281762526405
2021-05-11 04:10:33.991 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 7816f29, state=READY, timeoutUs=845281762526405
2021-05-11 04:10:34.000 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 7816f29, state=INIT_PLAY, timeoutUs=845281762526405
2021-05-11 04:10:34.001 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 7816f29, timeoutUs=845281762526405

2021-05-11 04:10:34.173 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 7816f29, state=PLAYING, timeoutUs=845281969412405
2021-05-11 04:10:34.174 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 7816f29 temporary, timeoutUs=845281969412405
2021-05-11 04:10:34.196 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 4b102ae, state=CREATED
2021-05-11 04:10:34.202 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 4b102ae, state=READY
2021-05-11 04:10:34.203 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 4b102ae, state=READY, timeoutUs=845281969412405
2021-05-11 04:10:34.203 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 4b102ae, state=READY, timeoutUs=845281969412405
2021-05-11 04:10:34.215 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 4b102ae, state=INIT_PLAY, timeoutUs=845281969412405
2021-05-11 04:10:34.215 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 4b102ae, timeoutUs=845281969412405

2021-05-11 04:10:34.347 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 4b102ae, state=PLAYING, timeoutUs=845282143632328
2021-05-11 04:10:34.348 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 4b102ae temporary, timeoutUs=845282143632328
2021-05-11 04:10:34.367 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile ec3584f, state=CREATED
2021-05-11 04:10:34.370 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile ec3584f, state=READY
2021-05-11 04:10:34.371 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile ec3584f, state=READY, timeoutUs=845282143632328
2021-05-11 04:10:34.371 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile ec3584f, state=READY, timeoutUs=845282143632328
2021-05-11 04:10:34.381 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile ec3584f, state=INIT_PLAY, timeoutUs=845282143632328
2021-05-11 04:10:34.381 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile ec3584f, timeoutUs=845282143632328

2021-05-11 04:10:34.485 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile ec3584f, state=PLAYING, timeoutUs=845282282726328
2021-05-11 04:10:34.486 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile ec3584f temporary, timeoutUs=845282282726328
2021-05-11 04:10:34.505 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile a2edbdc, state=CREATED
2021-05-11 04:10:34.508 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile a2edbdc, state=READY
2021-05-11 04:10:34.508 4810-18253 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile a2edbdc, state=READY, timeoutUs=845282282726328
2021-05-11 04:10:34.508 4810-18253 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile a2edbdc, state=READY, timeoutUs=845282282726328
2021-05-11 04:10:34.517 4810-18253 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile a2edbdc, state=INIT_PLAY, timeoutUs=845282282726328
2021-05-11 04:10:34.517 4810-18253 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile a2edbdc, timeoutUs=845282282726328

2021-05-11 04:10:35.389 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile a2edbdc, state=PLAYING, timeoutUs=845282486291174
2021-05-11 04:10:35.390 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile a2edbdc temporary, timeoutUs=845282486291174
2021-05-11 04:10:35.404 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 518d4e5, state=CREATED
2021-05-11 04:10:35.407 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 518d4e5, state=READY
2021-05-11 04:10:35.407 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 518d4e5, state=READY, timeoutUs=845282486291174
2021-05-11 04:10:35.408 4810-18369 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 518d4e5, state=READY, timeoutUs=845282486291174
2021-05-11 04:10:35.416 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 518d4e5, state=INIT_PLAY, timeoutUs=845282486291174
2021-05-11 04:10:35.416 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 518d4e5, timeoutUs=845282486291174
2021-05-11 04:10:35.417 4810-18369 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile 518d4e5, state=INIT_PLAY, timeoutUs=845282486291174

2021-05-11 04:10:35.445 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 518d4e5, state=INITIALIZING, timeoutUs=845282644283789
2021-05-11 04:10:35.445 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 518d4e5 temporary, timeoutUs=845282644283789
2021-05-11 04:10:35.457 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 206da61, state=CREATED
2021-05-11 04:10:35.459 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 206da61, state=READY
2021-05-11 04:10:35.459 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 206da61, state=READY, timeoutUs=845282644283789
2021-05-11 04:10:35.459 4810-18369 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 206da61, state=READY, timeoutUs=845282644283789
2021-05-11 04:10:35.468 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 206da61, state=INIT_PLAY, timeoutUs=845282644283789
2021-05-11 04:10:35.469 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 206da61, timeoutUs=845282644283789
2021-05-11 04:10:35.470 4810-18369 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile 206da61, state=INIT_PLAY, timeoutUs=845282644283789

2021-05-11 04:10:35.496 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 206da61, state=INITIALIZING, timeoutUs=845282802759558
2021-05-11 04:10:35.496 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 206da61 temporary, timeoutUs=845282802759558
2021-05-11 04:10:35.507 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile d5c7be3, state=CREATED
2021-05-11 04:10:35.510 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile d5c7be3, state=READY
2021-05-11 04:10:35.510 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile d5c7be3, state=READY, timeoutUs=845282802759558
2021-05-11 04:10:35.510 4810-18369 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile d5c7be3, state=READY, timeoutUs=845282802759558
2021-05-11 04:10:35.518 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile d5c7be3, state=INIT_PLAY, timeoutUs=845282802759558
2021-05-11 04:10:35.518 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile d5c7be3, timeoutUs=845282802759558
2021-05-11 04:10:35.519 4810-18369 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile d5c7be3, state=INIT_PLAY, timeoutUs=845282802759558

2021-05-11 04:10:35.544 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile d5c7be3, state=INITIALIZING, timeoutUs=845282952899443
2021-05-11 04:10:35.544 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile d5c7be3 temporary, timeoutUs=845282952899443
2021-05-11 04:10:35.556 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile cf77499, state=CREATED
2021-05-11 04:10:35.558 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile cf77499, state=READY
2021-05-11 04:10:35.558 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile cf77499, state=READY, timeoutUs=845282952899443
2021-05-11 04:10:35.559 4810-18369 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile cf77499, state=READY, timeoutUs=845282952899443
2021-05-11 04:10:35.567 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile cf77499, state=INIT_PLAY, timeoutUs=845282952899443
2021-05-11 04:10:35.567 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile cf77499, timeoutUs=845282952899443

2021-05-11 04:10:35.568 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile cf77499, state=READY, timeoutUs=845283101764866
2021-05-11 04:10:35.568 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile cf77499 temporary, timeoutUs=845283101764866
2021-05-11 04:10:35.581 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 239735e, state=CREATED
2021-05-11 04:10:35.583 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 239735e, state=READY
2021-05-11 04:10:35.583 4810-18369 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 239735e, state=READY, timeoutUs=845283101764866
2021-05-11 04:10:35.583 4810-18369 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 239735e, state=READY, timeoutUs=845283101764866
2021-05-11 04:10:35.592 4810-18369 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 239735e, state=INIT_PLAY, timeoutUs=845283101764866
2021-05-11 04:10:35.593 4810-18369 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 239735e, timeoutUs=845283101764866

2021-05-11 04:10:35.997 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile 239735e, state=PLAYING, timeoutUs=845283276912750
2021-05-11 04:10:35.999 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile 239735e temporary, timeoutUs=845283276912750
2021-05-11 04:10:36.017 4810-18368 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile fd44f8, state=CREATED
2021-05-11 04:10:36.020 4810-18368 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile fd44f8, state=READY
2021-05-11 04:10:36.020 4810-18368 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile fd44f8, state=READY, timeoutUs=845283276912750
2021-05-11 04:10:36.021 4810-18368 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile fd44f8, state=READY, timeoutUs=845283276912750
2021-05-11 04:10:36.031 4810-18368 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile fd44f8, state=INIT_PLAY, timeoutUs=845283276912750
2021-05-11 04:10:36.031 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile fd44f8, timeoutUs=845283276912750
2021-05-11 04:10:36.032 4810-18368 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile fd44f8, state=INIT_PLAY, timeoutUs=845283276912750

2021-05-11 04:10:36.056 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile fd44f8, state=INITIALIZING, timeoutUs=845283369452596
2021-05-11 04:10:36.057 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile fd44f8 temporary, timeoutUs=845283369452596
2021-05-11 04:10:36.068 4810-18368 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile c2a9036, state=CREATED
2021-05-11 04:10:36.070 4810-18368 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile c2a9036, state=READY
2021-05-11 04:10:36.070 4810-18368 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile c2a9036, state=READY, timeoutUs=845283369452596
2021-05-11 04:10:36.071 4810-18368 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile c2a9036, state=READY, timeoutUs=845283369452596
2021-05-11 04:10:36.078 4810-18368 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile c2a9036, state=INIT_PLAY, timeoutUs=845283369452596
2021-05-11 04:10:36.079 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile c2a9036, timeoutUs=845283369452596
2021-05-11 04:10:36.080 4810-18368 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile c2a9036, state=INIT_PLAY, timeoutUs=845283369452596

2021-05-11 04:10:36.101 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile c2a9036, state=INITIALIZING, timeoutUs=845283477457173
2021-05-11 04:10:36.102 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile c2a9036 temporary, timeoutUs=845283477457173
2021-05-11 04:10:36.114 4810-18368 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile a3db8a4, state=CREATED
2021-05-11 04:10:36.115 4810-18368 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile a3db8a4, state=READY
2021-05-11 04:10:36.116 4810-18368 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile a3db8a4, state=READY, timeoutUs=845283477457173
2021-05-11 04:10:36.116 4810-18368 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile a3db8a4, state=READY, timeoutUs=845283477457173
2021-05-11 04:10:36.125 4810-18368 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile a3db8a4, state=INIT_PLAY, timeoutUs=845283477457173
2021-05-11 04:10:36.125 4810-18368 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile a3db8a4, timeoutUs=845283477457173

2021-05-11 04:10:36.213 4810-18372 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile a3db8a4, state=PLAYING, timeoutUs=845283605780750
2021-05-11 04:10:36.214 4810-18372 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile a3db8a4 temporary, timeoutUs=845283605780750
2021-05-11 04:10:36.230 4810-18372 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile ad7700e, state=CREATED
2021-05-11 04:10:36.233 4810-18372 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile ad7700e, state=READY
2021-05-11 04:10:36.234 4810-18372 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile ad7700e, state=READY, timeoutUs=845283605780750
2021-05-11 04:10:36.234 4810-18372 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile ad7700e, state=READY, timeoutUs=845283605780750
2021-05-11 04:10:36.245 4810-18372 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile ad7700e, state=INIT_PLAY, timeoutUs=845283605780750
2021-05-11 04:10:36.245 4810-18372 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile ad7700e, timeoutUs=845283605780750

2021-05-11 04:10:36.435 4810-18373 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile ad7700e, state=PLAYING, timeoutUs=845283737686712
2021-05-11 04:10:36.436 4810-18373 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile ad7700e temporary, timeoutUs=845283737686712
2021-05-11 04:10:36.455 4810-18373 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile ab32a2f, state=CREATED
2021-05-11 04:10:36.458 4810-18373 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile ab32a2f, state=READY
2021-05-11 04:10:36.459 4810-18373 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile ab32a2f, state=READY, timeoutUs=845283737686712
2021-05-11 04:10:36.459 4810-18373 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile ab32a2f, state=READY, timeoutUs=845283737686712
2021-05-11 04:10:36.467 4810-18373 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile ab32a2f, state=INIT_PLAY, timeoutUs=845283737686712
2021-05-11 04:10:36.467 4810-18373 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile ab32a2f, timeoutUs=845283737686712
2021-05-11 04:10:36.468 4810-18373 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile ab32a2f, state=INIT_PLAY, timeoutUs=845283737686712

2021-05-11 04:10:36.492 4810-18373 D/SoundPlayer: REPRESSTEST SoundPlayer: running togglePlay, audioFile=AudioFile ab32a2f, state=INITIALIZING, timeoutUs=845283825631558
2021-05-11 04:10:36.492 4810-18373 D/SoundPlayer: REPRESSTEST SoundPlayer: made AudioFile ab32a2f temporary, timeoutUs=845283825631558
2021-05-11 04:10:36.503 4810-18373 D/AudioFile: REPRESSTEST AudioFile: starting prepare(), audioFile=AudioFile 47d783c, state=CREATED
2021-05-11 04:10:36.505 4810-18373 D/AudioFile: REPRESSTEST AudioFile: finishing prepare(), audioFile=AudioFile 47d783c, state=READY
2021-05-11 04:10:36.505 4810-18373 D/AudioFile: REPRESSTEST AudioFile: starting play(), audioFile=AudioFile 47d783c, state=READY, timeoutUs=845283825631558
2021-05-11 04:10:36.506 4810-18373 D/AudioFile: REPRESSTEST AudioFile: running class us.huseli.soundboard.audio.AudioFile$PlayAction.start(), audioFile=AudioFile 47d783c, state=READY, timeoutUs=845283825631558
2021-05-11 04:10:36.514 4810-18373 D/AudioFile: REPRESSTEST AudioFile: finishing play(), audioFile=AudioFile 47d783c, state=INIT_PLAY, timeoutUs=845283825631558
2021-05-11 04:10:36.515 4810-18373 D/SoundPlayer: REPRESSTEST SoundPlayer: created new audioFile=AudioFile 47d783c, timeoutUs=845283825631558
2021-05-11 04:10:36.648 4810-18371 D/AudioFile: REPRESSTEST AudioFile: timeout reached, audioFile=AudioFile cf77499, state=INIT_PLAY, timeoutUs=845282952899443



Ljud löper ut:
SoundPlayer.togglePlay()
    audioFile?.play()
        PlayActionAbstract.start()
            preparePlay()
                state = State.INIT_PLAY
                audioTrack.build()
                audioTrack.play()
            extractJob = scope.launch {
                onPlayStart()
                state = State.PLAYING
                enqueueStop()
                    queuedStopJob = scope.launch {
                        state = State.STOPPED
                        onStopped()
                            state = State.INITIALIZING
                            extractJob?.cancelAndJoin()
                            audioTrack.release()
                            doPrepare()
                            doPrime()
                            state = State.READY
                codec?.flush()

Ljud timeoutar:
SoundPlayer.togglePlay()
    AudioFile.play(timeout)
        PlayActionAbstract.start()
            preparePlay()
                state = State.INIT_PLAY
                audioTrack.build()
                audioTrack.play()
            extractJob = scope.launch {
                codec?.flush()
                onTimeout()
                    queuedStopJob?.cancel()
                    onStopped()
                        if (releaseAfterStop)
                            this@AudioFile.release()
                        else
                            state = State.INITIALIZING
                            extractJob?.cancelAndJoin()
                            audioTrack.release()
                            doPrepare()
                            doPrime()
                            state = State.READY



audioFile?.restart(timeoutUs)
    RestartAction().start()
        codec = CodecPool.acquire(inputMediaFormat)
        audioExtractor = AudioExtractor(audioTrack, extractor, mime, bufferSize, codec)
        preparePlay()
            audioTrack.build()
            audioTrack.play()
        extractJob = scope.launch
            buffer = getBuffer(audioExtractor)
                audioExtractor.extractBuffer()
                    extractBufferEncoded(it, false)?.buffer
                        processInputBuffer(codec)
                            codec.dequeueInputBuffer(1000L)
                            codec.getInputBuffer(index)
                            extractor.readSampleData(buffer, 0)
                            codec.queueInputBuffer(index, 0, sampleSize, extractor.sampleTime, extractor.sampleFlags)
                        processOutputBuffer(codec, priming)
                            index = codec.dequeueOutputBuffer(info, if (priming) TIMEOUT_PRIMING else TIMEOUT_REGULAR)
                            buffer = codec.getOutputBuffer(index)
                            codec.releaseOutputBuffer(index, false)
            audioTrack.write(buffer)
                result = audioTrack?.write(buffer, sampleSize, AudioTrack.WRITE_BLOCKING)
            codec?.flush()



0.5389221556886228


App start (just once):
    Read sharedprefs.landscapeSpanCount, feed to appviewmodel
main or baseactivity:
    observe appviewmodel.landscapespancount, update prefs with it
categorylistfragment:
    Observe appviewmodel.span count livedata


bind:
 this = {SoundAdapter$SoundViewHolder@13428} "SoundAdapter.ViewHolder 3485cf6 <adapterPosition=0, sound=SoundExtended 7202591 <id=975, name=Cool Britannia, backgroundColor=-16728876, categoryId=5>>"
 sound = {SoundExtended@13429} "SoundExtended 7202591 <id=975, name=Cool Britannia, backgroundColor=-16728876, categoryId=5>"

this = {SoundAdapter$SoundViewHolder@13458} "SoundAdapter.ViewHolder a9af2ad <adapterPosition=1, sound=SoundExtended 8c3ed93 <id=974, name=Boing Boom Tschak, backgroundColor=-16728876, categoryId=5>>"
sound = {SoundExtended@13459} "SoundExtended 8c3ed93 <id=974, name=Boing Boom Tschak, backgroundColor=-16728876, categoryId=5>"


bind, efter byt plats:
item = {SoundExtended@13542} "SoundExtended a95678d <id=975, name=Cool Britannia, backgroundColor=-16728876, categoryId=5>"
this = {SoundAdapter$SoundViewHolder@13523} "SoundAdapter.ViewHolder 3485cf6 <adapterPosition=1, sound=SoundExtended a95678d <id=975, name=Cool Britannia, backgroundColor=-16728876, categoryId=5>>"

markcreated:
item = {SoundExtended@13564} "SoundExtended 8c3ed93 <id=974, name=Boing Boom Tschak, backgroundColor=-16728876, categoryId=5>"
this = {SoundAdapter$SoundViewHolder@13563} "SoundAdapter.ViewHolder a9af2ad <adapterPosition=0, sound=SoundExtended 8c3ed93 <id=974, name=Boing Boom Tschak, backgroundColor=-16728876, categoryId=5>>"

bind, efter byt plats:
item = {SoundExtended@13582} "SoundExtended a5cf024 <id=974, name=Boing Boom Tschak, backgroundColor=-16728876, categoryId=5>"
this = {SoundAdapter$SoundViewHolder@13563} "SoundAdapter.ViewHolder a9af2ad <adapterPosition=0, sound=SoundExtended a5cf024 <id=974, name=Boing Boom Tschak, backgroundColor=-16728876, categoryId=5>>"






Använder backgroundColor:
layout
    item_sound.xml
us.huseli.soundboard.adapters
    SoundAdapter.kt
        SoundAdapter
            DiffCallback
                oldItem.backgroundColor == newItem.backgroundColor &&
    SoundViewHolder
        sound.backgroundColor?.also {
us.huseli.soundboard.data
    SoundRepository.kt
        SoundRepository
            listLiveExtended
                sound.backgroundColor?.also { sound.textColor = colorHelper.getColorOnBackground(it) }

item_sound: kommer från (baklänges)
SoundViewHolder.bind()
    SoundAdapter.onBindViewHolder()
        SoundAdapter.getItem() -> SoundAdapter.submitList()
            CategoryViewHolder.bind() -> soundViewModel.filteredSounds.observe()
                SoundViewModel.allSounds -> SoundRepository.listLiveExtended()


Använder textColor: bara item_sound, sätts av SoundRepository.listLiveExtended()



Widget.MaterialComponents.PopupMenu.Overflow ärver från:
    Base.Widget.MaterialComponents.PopupMenu.Overflow
        <item name="android:dropDownVerticalOffset">1px</item>
    Widget.AppCompat.PopupMenu.Overflow
    Base.Widget.AppCompat.PopupMenu.Overflow
        <item name="overlapAnchor">true</item>
        <item name="android:dropDownHorizontalOffset">-4dip</item>
    Widget.MaterialComponents.PopupMenu
    Base.Widget.MaterialComponents.PopupMenu
        <item name="overlapAnchor">false</item>
        <item name="android:dropDownVerticalOffset">1px</item>
    Widget.AppCompat.PopupMenu
    Base.Widget.AppCompat.PopupMenu
    Widget.AppCompat.ListPopupWindow
    Base.Widget.AppCompat.ListPopupWindow
        <item name="android:dropDownSelector">?attr/listChoiceBackgroundIndicator</item>
        <item name="android:popupBackground">@drawable/abc_popup_background_mtrl_mult</item>
        <item name="android:dropDownVerticalOffset">0dip</item>
        <item name="android:dropDownHorizontalOffset">0dip</item>
        <item name="android:dropDownWidth">wrap_content</item>


pushSoundAndCategoryState:
--------------------------
UndoRepository.init
    pushSoundAndCategoryState

BaseCategoryDialogFragment.onCreateDialog
    EditCategoryDialogFragment.save
        CategoryEditViewModel.save
            pushSoundAndCategoryState

DeleteCategoryFragment.onCreateDialog
    CategoryViewModel.delete
        pushSoundAndCategoryState


pushSoundState:
---------------
CategoryViewHolder.init
    SoundDragListener.onDrag
        SoundDragListener.onDrop
            SoundAdapter.insertOrMoveSound
                SoundViewModel.update
                    pushSoundState

BaseEditSoundDialogFragment.onPositiveButtonClick
    BaseSoundEditViewModel.save
        SoundEditViewModel.doSave
            pushSoundState

DeleteSoundFragment.onPositiveButtonClick
    SoundDeleteViewModel.delete
        pushSoundState

BaseEditSoundDialogFragment.onPositiveButtonClick
    BaseSoundEditViewModel.save
        SoundAddViewModel.doSave
            pushSoundState

pushCategoryState:
------------------
CategoryAdapter.onClick
    CategoryAdapter.moveCategoryDown
        CategoryViewModel.switch
            pushCategoryState

CategoryAdapter.onClick
    CategoryAdapter.moveCategoryUp
        CategoryViewModel.switch
            pushCategoryState

BaseCategoryDialogFragment.onCreateDialog
    EditCategoryDialogFragment.save
        CategoryEditViewModel.save
            pushCategoryState

BaseCategoryDialogFragment.onCreateDialog
    AddCategoryDialogFragment.save
        CategoryAddViewModel.save
            pushCategoryState




START                                               states = [0], currentPos = 0

EDIT
push nytt state (efter edit)
currentPos++                                        states = [0, 1], currentPos = 1

EDIT
push nytt state (efter edit)
currentPos++                                        states = [0, 1, 2], currentPos = 2

UNDO (dvs gå tillbaka till föreg. state)
If currentPos > 0:
    Apply states[currentPos - 1]
    currentPos--                                    states = [0, 1, 2], currentPos = 1

EDIT
Ta bort alla states efter currentPos                states = [0, 1], currentPos = 1
push nytt state (efter edit)
currentPos++                                        states = [0, 1, 2], currentPos = 2





REDO (dvs gå fram till nästa state)
If (currentPos + 1) < states.size (2 < 3):
    Apply states[currentPos + 1]
    currentPos++                                    states = [0, 1, 2], currentPos = 2




2021-04-07 06:47:20.879 22328-22328 D/SoundAdapter: onBindViewHolder: item=Sound 1f533a6 <id=293, name=ba dum tss, categoryId=2>, holder=SoundAdapter.ViewHolder cc13232 <adapterPosition=1, sound=null>, position=1, category=1

2021-04-07 06:49:34.700 22328-22328 D/SoundAdapter: onBindViewHolder: item=Sound 30238da <id=339, name=HUUH!! lång, categoryId=1>,
holder=SoundAdapter.ViewHolder 7e0d10b <adapterPosition=79, sound=null>, position=79, category=Default




doplay().
audioTrack = {AudioFile$AudioTrackContainer@12989}
 audioAttributes = {AudioAttributes@13041} "AudioAttributes: usage=USAGE_MEDIA content=CONTENT_TYPE_MUSIC flags=0x800 tags= bundle=null"
 audioTrack = null
 bufferSize = 88200

efter biuld:
audioTrack = {AudioFile$AudioTrackContainer@12989}
 audioAttributes = {AudioAttributes@13041} "AudioAttributes: usage=USAGE_MEDIA content=CONTENT_TYPE_MUSIC flags=0x800 tags= bundle=null"
 audioTrack = {AudioTrack@13101}
 bufferSize = 88200

play:
audioTrack = {AudioFile$AudioTrackContainer@12989}
 audioAttributes = {AudioAttributes@13041} "AudioAttributes: usage=USAGE_MEDIA content=CONTENT_TYPE_MUSIC flags=0x800 tags= bundle=null"
 audioTrack = {AudioTrack@13101}
 bufferSize = 88200

doplay -> writeSAutioTrack

AudioTrackContainer -> wite;
audioTrack = {AudioTrack@13101}
 mAudioFormat = 2
 mAvSyncBytesRemaining = 0
 mAvSyncHeader = null
 mChannelConfiguration = 12


AudioTrackContainer.play()
audioTrack = {AudioTrack@12869}
 mAudioFormat = 2
 mAvSyncBytesRemaining = 0
 mAvSyncHeader = null




1,3,default,4,2


bind:
this = {SoundAdapter$SoundViewHolder@12745} "SoundAdapter.ViewHolder 58a1ea6 <adapterPosition=4, sound=Sound e2001 <id=295, name=Bisarra hörnan 2 Edit 1 Export 1, categoryId=1>>"
sound = {Sound@12880} "Sound 274b102 <id=298, name=Bobbo Viking, categoryId=1>"

markAttach:
this = {SoundAdapter$SoundViewHolder@12745} "SoundAdapter.ViewHolder 58a1ea6 <adapterPosition=4, sound=Sound 274b102 <id=298, name=Bobbo Viking, categoryId=1>>"
item = {Sound@12880} "Sound 274b102 <id=298, name=Bobbo Viking, categoryId=1>"

markdetach:
this = {SoundAdapter$SoundViewHolder@12866} "SoundAdapter.ViewHolder b87100f <adapterPosition=4, sound=Sound 155c16e <id=298, name=Bobbo Viking, categoryId=1>>"
item = {Sound@12871} "Sound 155c16e <id=298, name=Bobbo Viking, categoryId=1>"



markAttach:
item = {Sound@12802} "Sound 7c503a3 <id=296, name=blygdläppar kort, categoryId=1>"
 added = {Date@12832} "Sun Feb 28 05:47:02 GMT+01:00 2021"
 backgroundColor = {Integer@12833} -12627531
 categoryId = {Integer@12834} 1
 checksum = "f5ca355cdde3470dc7f7c6f1e1dfc33e"
 duration = 9659
 id = {Integer@12836} 296
 name = "blygdläppar kort"
 order = 3
 path = "/data/user/0/us.huseli.soundboard.debug/app_sounds/f5ca355cdde3470dc7f7c6f1e1dfc33e"
 selected = false
 textColor = {Integer@12839} -1
 uri = null
 volume = 51
 shadow$_klass_ = {Class@11094} "class us.huseli.soundboard.data.Sound"
 shadow$_monitor_ = -2017131613

removeOnSelct...
sound = {Sound@12772} "Sound cbbe518 <id=296, name=blygdläppar kort, categoryId=1>"
 added = {Date@12844} "Sun Feb 28 05:47:02 GMT+01:00 2021"
 backgroundColor = {Integer@12845} -12627531
 categoryId = {Integer@12834} 1
 checksum = "f5ca355cdde3470dc7f7c6f1e1dfc33e"
 duration = 9659
 id = {Integer@12847} 296
 name = "blygdläppar kort"
 order = 3
 path = "/data/user/0/us.huseli.soundboard.debug/app_sounds/f5ca355cdde3470dc7f7c6f1e1dfc33e"
 selected = false
 textColor = {Integer@12839} -1
 uri = null
 volume = 100
 shadow$_klass_ = {Class@11094} "class us.huseli.soundboard.data.Sound"
 shadow$_monitor_ = -1933843176



2021-03-02 03:01:26.464 18049-21277 E/SoundPlayer: Error initializing Bobbo Viking
    java.lang.RuntimeException: Can't create handler inside thread Thread[DefaultDispatcher-worker-8,5,main] that has not called Looper.prepare()
        at android.os.Handler.<init>(Handler.java:207)
        at android.os.Handler.<init>(Handler.java:119)
        at android.os.CountDownTimer$1.<init>(CountDownTimer.java:114)
        at android.os.CountDownTimer.<init>(CountDownTimer.java:114)
        at us.huseli.soundboard.helpers.SoundPlayerTimer.<init>(SoundPlayerTimer.kt:10)
        at us.huseli.soundboard.adapters.SoundAdapter$SoundViewHolder.setDuration(SoundAdapter.kt:340)
        at us.huseli.soundboard.adapters.SoundAdapter$SoundViewHolder.onSoundPlayerDurationChange(SoundAdapter.kt:418)
        at us.huseli.soundboard.audio.SoundPlayer.set_duration(SoundPlayer.kt:25)
        at us.huseli.soundboard.audio.SoundPlayer.createAudioFile(SoundPlayer.kt:70)
        at us.huseli.soundboard.audio.SoundPlayer.access$createAudioFile(SoundPlayer.kt:12)
        at us.huseli.soundboard.audio.SoundPlayer$1.invokeSuspend(SoundPlayer.kt:60)
        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
        at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
        at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)


2021-03-02 03:01:26.479 18049-21220 E/SoundPlayer: Error initializing Ah, Music
    android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.
        at android.view.ViewRootImpl.checkThread(ViewRootImpl.java:9873)
        at android.view.ViewRootImpl.requestLayout(ViewRootImpl.java:1871)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at androidx.constraintlayout.widget.ConstraintLayout.requestLayout(ConstraintLayout.java:3504)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at androidx.recyclerview.widget.RecyclerView.requestLayout(RecyclerView.java:4586)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at androidx.recyclerview.widget.RecyclerView.requestLayout(RecyclerView.java:4586)
        at android.view.View.requestLayout(View.java:26335)
        at androidx.constraintlayout.widget.ConstraintLayout.requestLayout(ConstraintLayout.java:3504)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.requestLayout(View.java:26335)
        at androidx.constraintlayout.widget.ConstraintLayout.requestLayout(ConstraintLayout.java:3504)
        at android.view.View.requestLayout(View.java:26335)
        at android.view.View.setFlags(View.java:16790)
        at android.view.View.setVisibility(View.java:11622)
        at us.huseli.soundboard.adapters.SoundAdapter$SoundViewHolder.setDuration(SoundAdapter.kt:338)
        at us.huseli.soundboard.adapters.SoundAdapter$SoundViewHolder.onSoundPlayerDurationChange(SoundAdapter.kt:418)
        at us.huseli.soundboard.audio.SoundPlayer.set_duration(SoundPlayer.kt:25)
        at us.huseli.soundboard.audio.SoundPlayer.createAudioFile(SoundPlayer.kt:70)
        at us.huseli.soundboard.audio.SoundPlayer.access$createAudioFile(SoundPlayer.kt:12)
        at us.huseli.soundboard.audio.SoundPlayer$1.invokeSuspend(SoundPlayer.kt:60)
        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
        at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
        at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)





Scenario:
* Massa ljud laddade
* scrollade ned
* ljud slutade spela men fick play-ikon och progressbar uppdaterades
* när progressbar nått slut, togs ej play-ikon bort
* efter detta frös allting:

2021-02-28 05:50:48.418 3558-3558 I/ViewRootImpl@9b5448c[MainActivity]: ViewPostIme pointer 0
2021-02-28 05:50:48.443 3558-3558 I/ViewRootImpl@9b5448c[MainActivity]: ViewPostIme pointer 1
2021-02-28 05:50:48.450 3558-30221 D/AudioFile: doPlay: playing sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, audioTrack=android.media.AudioTrack@4bcf92b, this=us.huseli.soundboard.audio.AudioFile@d14e957
2021-02-28 05:50:48.453 3558-30221 D/AudioFile: state changed from READY to INIT_PLAY, this=us.huseli.soundboard.audio.AudioFile@d14e957, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.456 3558-32058 D/AudioFile: **** Begin extract(), state=INIT_PLAY, primedSize=0, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.458 3558-32058 D/AudioFile: processInputBuffer: index=1, sampleSize=8737, extractorDone=false, state=INIT_PLAY, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.460 3558-32058 D/AudioFile: extractEncoded: inputResult=CONTINUE, outputResult=OUTPUT_FORMAT_CHANGED, outputRetries=1, stop=false, doExtraction=true, state=INIT_PLAY, priming=false, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.461 3558-32058 D/AudioFile: processInputBuffer: index=2, sampleSize=9149, extractorDone=false, state=INIT_PLAY, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.461 3558-32058 D/AudioFile: processOutputBuffer: index=0, buffer=java.nio.DirectByteBuffer[pos=0 lim=16384 cap=294912], outputEos=false, state=INIT_PLAY, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.462 3558-32058 D/AudioFile: state changed from INIT_PLAY to PLAYING, this=us.huseli.soundboard.audio.AudioFile@d14e957, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.462 3558-32058 D/SoundPlayer: state change: this=SoundPlayer 14d22ef <sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, state=PLAYING>, uri=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, onStateChangeListener=SoundAdapter.ViewHolder de7c4a2 <adapterPosition=90, sound=SoundWithCategory(sound=Sound 3eed8a1 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, category=Default)>, state=PLAYING, listener=SoundAdapter.ViewHolder de7c4a2 <adapterPosition=90, sound=SoundWithCategory(sound=Sound 3eed8a1 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, category=Default)>
2021-02-28 05:50:48.462 3558-3558 D/SoundViewHolder: onSoundPlayerStateChange: item=SoundWithCategory(sound=Sound 3eed8a1 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, category=Default), state=PLAYING
2021-02-28 05:50:48.463 3558-32058 D/AudioFile: writeAudioTrack: writing to audioTrack=android.media.AudioTrack@4bcf92b, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.463 3558-32058 D/AudioFile: writeAudioTrack: wrote 16384 bytes, buffer=java.nio.DirectByteBuffer[pos=16384 lim=16384 cap=294912], state=PLAYING, sampleSize=16384, overshoot=0, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.463 3558-32058 D/AudioFile: extractEncoded: inputResult=CONTINUE, outputResult=SUCCESS, outputRetries=0, stop=false, doExtraction=true, state=PLAYING, priming=false, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.467 3558-32058 D/AudioFile: processInputBuffer: index=3, sampleSize=8796, extractorDone=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.467 3558-32058 D/AudioFile: processOutputBuffer: index=1, buffer=java.nio.DirectByteBuffer[pos=0 lim=16384 cap=294912], outputEos=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.467 3558-32058 D/AudioFile: writeAudioTrack: writing to audioTrack=android.media.AudioTrack@4bcf92b, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.468 3558-32058 D/AudioFile: writeAudioTrack: wrote 16384 bytes, buffer=java.nio.DirectByteBuffer[pos=16384 lim=16384 cap=294912], state=PLAYING, sampleSize=16384, overshoot=0, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.468 3558-32058 D/AudioFile: extractEncoded: inputResult=CONTINUE, outputResult=SUCCESS, outputRetries=0, stop=false, doExtraction=true, state=PLAYING, priming=false, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.469 3558-32058 D/AudioFile: processInputBuffer: index=4, sampleSize=8559, extractorDone=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.470 3558-32058 D/AudioFile: processOutputBuffer: index=2, buffer=java.nio.DirectByteBuffer[pos=0 lim=16384 cap=294912], outputEos=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.470 3558-32058 D/AudioFile: writeAudioTrack: writing to audioTrack=android.media.AudioTrack@4bcf92b, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.470 3558-32058 D/AudioFile: writeAudioTrack: wrote 16384 bytes, buffer=java.nio.DirectByteBuffer[pos=16384 lim=16384 cap=294912], state=PLAYING, sampleSize=16384, overshoot=0, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.470 3558-32058 D/AudioFile: extractEncoded: inputResult=CONTINUE, outputResult=SUCCESS, outputRetries=0, stop=false, doExtraction=true, state=PLAYING, priming=false, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.472 3558-32058 D/AudioFile: processInputBuffer: index=0, sampleSize=8238, extractorDone=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.473 3558-32058 D/AudioFile: processOutputBuffer: index=3, buffer=java.nio.DirectByteBuffer[pos=0 lim=16384 cap=294912], outputEos=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.473 3558-32058 D/AudioFile: writeAudioTrack: writing to audioTrack=android.media.AudioTrack@4bcf92b, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.473 3558-32058 D/AudioFile: writeAudioTrack: wrote 16384 bytes, buffer=java.nio.DirectByteBuffer[pos=16384 lim=16384 cap=294912], state=PLAYING, sampleSize=16384, overshoot=0, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.473 3558-32058 D/AudioFile: extractEncoded: inputResult=CONTINUE, outputResult=SUCCESS, outputRetries=0, stop=false, doExtraction=true, state=PLAYING, priming=false, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.473 3558-32058 D/AudioFile: processInputBuffer: index=1, sampleSize=7957, extractorDone=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.474 3558-32058 D/AudioFile: processOutputBuffer: index=4, buffer=java.nio.DirectByteBuffer[pos=0 lim=16384 cap=294912], outputEos=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.474 3558-32058 D/AudioFile: writeAudioTrack: writing to audioTrack=android.media.AudioTrack@4bcf92b, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.475 3558-32058 D/AudioFile: writeAudioTrack: wrote 16384 bytes, buffer=java.nio.DirectByteBuffer[pos=16384 lim=16384 cap=294912], state=PLAYING, sampleSize=16384, overshoot=0, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.475 3558-32058 D/AudioFile: extractEncoded: inputResult=CONTINUE, outputResult=SUCCESS, outputRetries=0, stop=false, doExtraction=true, state=PLAYING, priming=false, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.476 3558-32058 D/AudioFile: processInputBuffer: index=2, sampleSize=8623, extractorDone=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.476 3558-32058 D/AudioFile: processOutputBuffer: index=5, buffer=java.nio.DirectByteBuffer[pos=0 lim=16384 cap=294912], outputEos=false, state=PLAYING, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:48.476 3558-32058 D/AudioFile: writeAudioTrack: writing to audioTrack=android.media.AudioTrack@4bcf92b, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>
2021-02-28 05:50:49.553 3558-3558 I/ViewRootImpl@9b5448c[MainActivity]: ViewPostIme pointer 0
2021-02-28 05:50:49.587 3558-3558 I/ViewRootImpl@9b5448c[MainActivity]: ViewPostIme pointer 1
2021-02-28 05:50:49.598 3558-3558 D/SoundPlayer: state change: this=SoundPlayer 14d22ef <sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, state=STOPPED>, uri=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, onStateChangeListener=SoundAdapter.ViewHolder de7c4a2 <adapterPosition=90, sound=SoundWithCategory(sound=Sound 3eed8a1 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, category=Default)>, state=STOPPED, listener=SoundAdapter.ViewHolder de7c4a2 <adapterPosition=90, sound=SoundWithCategory(sound=Sound 3eed8a1 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, category=Default)>
2021-02-28 05:50:49.602 3558-3558 D/AudioFile: doStop: cancelling extractJob, sound=Sound 49fd3d4 <id=383, name=MYSTERY TRACK boing boing, categoryId=1>, state=PLAYING








2021-02-28 05:15:51.440 28814-28814 E/AndroidRuntime: FATAL EXCEPTION: main
    Process: us.huseli.soundboard.debug, PID: 28814
    java.util.ConcurrentModificationException
        at java.util.ArrayList$Itr.next(ArrayList.java:860)
        at us.huseli.soundboard.audio.SoundPlayer.togglePlay(SoundPlayer.kt:243)
        at us.huseli.soundboard.adapters.SoundAdapter$SoundViewHolder.onClick(SoundAdapter.kt:392)
        at android.view.View.performClick(View.java:7862)
        at android.view.View.performClickInternal(View.java:7831)
        at android.view.View.access$3600(View.java:879)
        at android.view.View$PerformClick.run(View.java:29359)
        at android.os.Handler.handleCallback(Handler.java:883)
        at android.os.Handler.dispatchMessage(Handler.java:100)
        at android.os.Looper.loop(Looper.java:237)
        at android.app.ActivityThread.main(ActivityThread.java:8167)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:496)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1100)


tempaudioplayers spelar till slut:
    för var och en körs vid onStop:
        if (!isPlaying()) _state = State.READY > loopar igenom alla tempaudioplayers. Om ingen av
        dem har isPlaying == true, sätt State.READY
    dvs:



    private fun extractEncoded(priming: Boolean) = runBlocking {
        /**
         * When priming: Ideally extract exactly `bufferSize` bytes of audio data. If there is some
         * overshoot, put it in `overrunSampleData`. Try to accomplish this by running codec input
         * and output "serially", i.e. only get input buffer when there has been a successful
         * output buffer get just before (except for the first iteration, of course).
         */
        var inputEos = false
        var outputRetries = 0
        var outputStopped = false
        var doExtraction = true
        var totalSize = primedSize
        
        try {
            while (!outputStopped && isActive) {
                if (!inputEos && doExtraction) inputEos = processInputBuffer()
                val (outputResult, sampleSize, buffer) = processOutputBuffer(totalSize)
                if (buffer != null) writeAudioTrack(buffer)
                totalSize += sampleSize
                when (outputResult) {
                    ProcessOutputResult.SUCCESS -> {
                        outputRetries = 0
                        // We don't _know_ that the next buffer will be of the same size as the current
                        // one, but it's an educated guess that's good enough:
                        if (priming) doExtraction = totalSize + sampleSize < bufferSize
                        outputStopped = false
                    }
                    ProcessOutputResult.EOS -> {
                        if (priming) doExtraction = false
                        outputStopped = true
                    }
                    else -> {
                        if (priming) doExtraction = false
                        outputStopped = outputRetries++ >= 5
                    }
                }
                if (BuildConfig.DEBUG) Log.d(
                    LOG_TAG,
                    "extractEncoded: outputResult=$outputResult, outputRetries=$outputRetries, outputStopped=$outputStopped, doExtraction=$doExtraction, state=$state, priming=$priming, sound=$sound"
                )
            }
            if (BuildConfig.DEBUG) Log.d(
                LOG_TAG,
                "**** extractEncoded: Extract finished: totalSize=$totalSize, totalSize before extract=$primedSize, added=${totalSize - primedSize}, state=$state, priming=$priming, sound=$sound"
            )
            if (priming) primedSize = totalSize
        } finally {
            if (BuildConfig.DEBUG) Log.d(LOG_TAG, "extractEncoded: cancelled")
        }
    }



soundplayer state READY
AudioFile@12753







val collection = MediaStore.Audio.Media.getContentUri(MediaStore.VOLUME_EXTERNAL)
val projection = arrayOf(MediaStore.Audio.Media._ID, MediaStore.Audio.Media.DISPLAY_NAME, MediaStore.Audio.Media.TITLE, MediaStore.Audio.Media.DURATION, MediaStore.Audio.Media.MIME_TYPE)
val selection = "${MediaStore.Audio.Media.DURATION} <= ?"
val selectionArgs = arrayOf("3000")
val query = contentResolver.query(collection, projection, selection, selectionArgs, null)
val audioList = mutableListOf<Array<String>>()
query?.use { cursor ->
    val idCol = cursor.getColumnIndexOrThrow(MediaStore.Audio.Media._ID)
    val nameCol = cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.DISPLAY_NAME)
    val titleCol = cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.TITLE)
    val durationCol = cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.DURATION)
    val mimeCol = cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.MIME_TYPE)
    while (cursor.moveToNext()) {
        audioList.add(arrayOf(cursor.getLong(idCol).toString(), cursor.getString(nameCol), cursor.getString(titleCol), cursor.getInt(durationCol).toString(), cursor.getString(mimeCol)))
    }
}


SPEKULATIONER
Vad händer när jag flyttar ett ljud till annan kategori?
1. Jag kör startDragAndDrop() på en View, som är SoundAdapter.binding.soundContainer, dvs en
    ConstraintLayout från item_sound.xml
2. SoundDragListener2.onDragLocation() kör callback.insertOrMoveSound, där callback är den nya
    kategorins SoundAdapter
3. SoundAdapter.insertOrMoveSound() kör categoryViewModel.insertSound(...)
4. CategoryViewModel.insertSound() kör updateSounds() med den nya kategorins uppdaterade Sound-
    lista (inkl. det flyttade ljudet)
5. CategoryViewModel.updateSounds() kör soundRepository.update() med denna lista
6. SoundRepository.update() kör soundDao.update() med samma lista
7. SoundDao.update() uppdaterar SQL-rad för varje ljud i listan
8. CategoryViewModel.sounds live-uppdateras med nya listor via soundRepository.getByCategory()
    -- för alla kategorier. Dvs även den gamla kategorin får ny lista, utan det flyttade ljudet.
9. CategoryAdapter.ViewHolder för den _gamla_ kategorin skickar uppdaterad ljudlista till
    sin soundAdapter.submitList()
10. SoundAdapter.submitList() > ListAdapter.submitList() > AsyncListDiffer.submitList()
11. AsyncListDiffer.submitList() kör listan via DiffUtil med SoundAdapter.DiffCallback, oerhört
    snårigt vad som sker sedan
12. Men TROLIGEN körs SoundAdapter.notifyItemRemoved d.v.s.
    RecyclerView.Adapter.notifyItemRemoved(ljudets f.d. position), som kör
    RecyclerView.AdapterDataObservable().notifyItemRangeRemoved(position, 1).
13. Därifrån körs onItemRangeRemoved(positionStart, itemCount) på alla AdapterDataObservers, vilka
    de nu är, men troligen är de RecyclerView.RecyclerViewDataObserver
14. TROLIGEN mynnar detta ut i att ljudets gamla ViewHolder + View tas bort på ngt vis
15. TROLIGEN körs RecyclerView.RecyclerViewDataObserver.onItemRangeRemoved(position, 1), som kör
    AdapterHelper.onItemRangeRemoved(position, 1)
16. Om ovanstående stämmer, är vi nu i ett läge där View från (1) är borttagen från skärmen (typ),
    men dess startDragAndDrop() körs fortfarande ... kan detta vara problemet?

ÅTGÄRDER OM SPEKULATIONERNA STÄMMER
a)  Vänta med att ta bort ljud från gamla SoundAdaptern tills drag är slutförd. Detta innebär att
    vi måste ställa om så att SoundAdapter.notifyItem* inte automatiskt uppdaterar DB i varje
    läge, utan om drag är pågående så uppskjuts de operationerna, men views uppdateras ändå.
    Förhoppningsvis är det så enkelt att man, under pågående drag, kan köra notifyItem* direkt
    bara? Och inte insertOrMoveSound() eller något annat som kör submitList().
        Eller NEJ, det är det ju inte :-////// -- notifyItem* förlitar sig fortfarande på
    currentList, som handhas av ListAdapter. Så måste hitta något sätt att uppdatera currentList
    utan att det förs vidare till databasen.
        currentList är inte mutable utan är bara tänkt att uppdateras via submitList(). Men
    ListAdapter.submitList() har i sig inget med databasen att göra. Så det borde funka att bara
    köra submitList() med den lista man för tillfället vill visa, utan att DB ändras alls.
        Eller NEJ igen. Kör man submitList() så uppdateras views enligt denna lista, skit samma
    om det har gått via DB eller ej. Poängen är att ursprungs-View:n från (1) troligen måste vara
    kvar tills drag är avslutad helt enkelt.
        Kanske vi inte alls får röra original-View tills drag är avslutad? Dvs denna adapter-
    position får inte flyttas eller något. Dock alla andra.
b)  Gör ngn slug manöver i stil med att, vid ACTION_DRAG_ENTERED, avsluta nuvarande drag och starta
    en ny (implicerar iofs (a), så den behöver göras oavsett)
c)  Skit opp arslet så det är stort som fan
