Set sound volume on load
Set sound volume, bgcolor, name on update (drag + edit viewmodel)

Write tests :-//////////////


Try working with EmptySound when moving around.
Start drag: Sound removed from adapter, EmptySound added in its place
Sound is dragged to new position: EmptySound moved there
Sound is dragged to new recyclerview: EmptySound moved there
???


Sounds don't change colour on category change

Desired logic for soundviewholders:
On click:
    If reorder enabled: start drag & drop
    Else if select enabled: toggle select
    Else: play/pause (or show error toast)
On long click:
    (If reorder enabled: start drag & drop (same as on click))
    Else if select enabled: do nothing
    Else: Enable select, select item


Drag sounds between categories? Is it even possible?
https://github.com/jkozh/DragDropTwoRecyclerViews

SoundDragListener.onDrag gets v = the RecyclerView we're currently dragging over.
Try to somehow engage some inbuilt ItemTouchHelper magic on that recyclerview?
While view is moving, ItemTouchHelper runs:
                        updateDxDy(event, mSelectedFlags, activePointerIndex);
                        moveIfNecessary(viewHolder);
                        mRecyclerView.removeCallbacks(mScrollRunnable);
                        mScrollRunnable.run();
                        mRecyclerView.invalidate();
On ACTION_UP (view is released):
                    select(null, ACTION_STATE_IDLE);
                    mActivePointerId = ACTIVE_POINTER_ID_NONE;
moveIfNecessary is interesting; "Checks if we should swap w/ another view holder"
It calls findSwapTargets()


Click on category name should collapse/expand category

Scrap the nested recyclerviews and implement getItemViewType?
https://www.raywenderlich.com/272-intermediate-recyclerview-tutorial-with-kotlin
(See branch one-recyclerview for maybe futile attempts at this)

Trash CategoryListFragment, put it all in MainActivity?

######## PROBABLY NOT #########

Try setting AudioAttributes: https://developer.android.com/reference/kotlin/android/media/AudioAttributes
- FLAG_LOW_LATENCY (Deprecated: Use AudioTrack.Builder#setPerformanceMode(int) with AudioTrack#PERFORMANCE_MODE_LOW_LATENCY to control performance.)
- USAGE_MEDIA
Comment: This is probably WAY too cumbersome to be worth it.
See: https://mindtherobot.com/blog/580/android-audio-play-a-wav-file-on-an-audiotrack/

Share sounds from other apps to this one -- seems like it's not possible to do this and get
persistable permissions to the URI? :(